import json  # importa o m칩dulo json para salvar e carregar tarefas de um arquivo

ARQUIVO = "tarefas.txt"  # define o nome do arquivo onde as tarefas ser칚o salvas

def salvar_tarefas():  # fun칞칚o que salva as tarefas no arquivo
    with open(ARQUIVO, "w") as f:  # abre o arquivo no modo escrita
        json.dump(tarefas, f, indent=4)  # salva a lista de tarefas em formato JSON no arquivo

def carregar_tarefas():  # fun칞칚o que carrega as tarefas do arquivo
    try:  # tenta abrir o arquivo
        with open(ARQUIVO, "r") as f:  # abre o arquivo no modo leitura
            return json.load(f)  # carrega os dados do arquivo e retorna como lista
    except FileNotFoundError:  # se o arquivo n칚o for encontrado
        return []  # retorna uma lista vazia

def adicionar_tarefa(descricao):  # fun칞칚o que adiciona uma nova tarefa
    prioridade = input("Digite a prioridade (baixa, m칠dia, alta): ")  # l칡 a prioridade da tarefa informada pelo usu치rio
    tarefa = {  # cria um dicion치rio com os dados da tarefa
        "descricao": descricao,  # descri칞칚o da tarefa
        "prioridade": prioridade.lower()  # prioridade em letras min칰sculas
    }
    tarefas.append(tarefa)  # adiciona a tarefa na lista principal
    historico.append(tarefa)  # adiciona a tarefa na pilha de hist칩rico
    fila_execucao.append(tarefa)  # adiciona a tarefa na fila de execu칞칚o
    salvar_tarefas()  # salva as tarefas no arquivo
    print(f"Tarefa '{descricao}' adicionada!\n")  # mostra para o usu치rio que a tarefa foi adicionada

def desfazer_ultima_tarefa():  # fun칞칚o para desfazer a 칰ltima tarefa adicionada (Pilha)
    if historico:  # se houver tarefas no hist칩rico
        ultima = historico.pop()  # remove a 칰ltima tarefa da pilha
        tarefas.remove(ultima)  # remove a tarefa da lista principal
        fila_execucao.remove(ultima)  # remove a tarefa da fila de execu칞칚o
        salvar_tarefas()  # salva as tarefas atualizadas no arquivo
        print(f"Tarefa '{ultima['descricao']}' desfeita!\n")  # mostra para o usu치rio qual tarefa foi desfeita
    else:  # se n칚o
        print("Nenhuma tarefa para desfazer.\n")  # comando printa para o usu치rio que n칚o existe nenhuma tarefa para ser removida

def atender_tarefa():  # comando de concluir tarefas (Fila)
    if fila_execucao:  # se fila_execu칞칚o tiver:
        feita = fila_execucao.pop(0)  # remove e retorna a primeira tarefa (Fila)
        tarefas.remove(feita)  # remove a tarefa da fila de execu칞칚o
        salvar_tarefas()  # salva as tarefas atualizadas no arquivo
        print(f"Tarefa '{feita['descricao']}' atendida!\n")  # comando printa para o usu치rio que a tarefa foi feita
    else:  # se n칚o
        print("Nenhuma tarefa para atender.\n")  # comando printa para o usu치rio que n칚o existe tarefas a serem concluidas

def mostrar_tarefas():  # comando para mostrar todas as tarefas adicionadas
    print("\n游늶 Lista de Tarefas:")  # comando printa para o usu치rio a lista de tarefas
    for i, t in enumerate(tarefas):  # percorre a lista de tarefas com 칤ndice (i) e valor (t)
        print(f"{i + 1}. {t['descricao']} | Prioridade: {t['prioridade']}")  # comando printa a descri칞칚o e prioridade de cada tarefa
    print()  # comando printa para o usu치rio o espa칞o entre numera칞칚o e tarefa

# Inicializa estruturas com dados do arquivo
tarefas = carregar_tarefas()  # carrega as tarefas salvas no arquivo
historico = tarefas.copy()  # copia as tarefas para o hist칩rico (simulando uma pilha)
fila_execucao = tarefas.copy()  # copia as tarefas para a fila de execu칞칚o (simulando uma fila)

while True:  # comando de loop que s칩 termina quando o usu치rio escolhe sair
    print("1. Adicionar Tarefa")  # comando printa para o usu치rio a op칞칚o de adicionar tarefa
    print("2. Desfazer 칔ltima Tarefa")  # comando printa para o usu치rio a op칞칚o de remover a ultima tarefa adicionada
    print("3. Atender Tarefa (modo fila)")  # comando printa para o usu치rio a op칞칚o de concluir tarefa
    print("4. Mostrar Tarefas")  # comando printa para o usu치rio a op칞칚o de mostrar tarefas
    print("5. Sair")  # comando printa para o usu치rio a op칞칚o de sair

    opcao = input("Escolha uma op칞칚o: ")  # comando que l칡 a op칞칚o escolhida pelo usu치rio

    if opcao == '1':  # se o usu치rio digitar "1":
        descricao = input("Digite a tarefa: ")  # printa para o usu치rio a op칞칚o de digitar uma tarefa
        adicionar_tarefa(descricao)  # comando executa a fun칞칚o "adicionar_tarefa"
    elif opcao == '2':  # se o usu치rio digitar "2":
        desfazer_ultima_tarefa()  # comando remove a 칰ltima tarefa que foi adicionada
    elif opcao == '3':  # se o usu치rio digitar "3":
        atender_tarefa()  # comando executa a fun칞칚o "atender_tarefa"
    elif opcao == '4':  # se o usu치rio digitar "4":
        mostrar_tarefas()  # comando executa a fun칞칚o "mostrar_tarefas"
    elif opcao == '5':  # se o usu치rio digitar "5":
        print("Saindo do programa...")  # comando printa para o usu치rio que ele est치 saindo do programa
        break  # o loop para
    else:  # se n칚o
        print("Op칞칚o inv치lida!\n")  # comando printa para o usu치rio que a op칞칚o escolhida 칠 inv치lida
